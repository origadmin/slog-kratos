name: Release Please

on:
  push:
    branches:
      - main # Adjust if your main development branch is different (e.g., develop)
  workflow_dispatch: # Allows manual triggering

permissions:
  contents: write # Required for creating releases and updating changelog
  pull-requests: write # Required for creating release PRs

jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required for release-please to analyze full history

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23' # Use a stable Go version

      - name: Run Release Please
        uses: googleapis/release-please-action@v4
        id: release # Assign an ID to access outputs
        with:
          release-type: go # Specify release type for Go projects
          package-name: slog-kratos # The name of your Go module/package
          # Optional: target-branch: main # If your main branch is not 'main'
          # Optional: changelog-path: CHANGELOG.md # If you want a specific changelog path
          # Optional: bump-minor-pre-major: true # If you want minor bumps before major version (e.g., 0.x.x -> 0.y.0)
          # Optional: command: release-pr # To only create release PRs, not direct releases
          # Optional: extra-files: | # If you have other files that need version bumping
          #   version.go
          #   config/version.json

      # Optional: If you want to do something after a release is created (e.g., notify Slack)
      - name: Notify on new release
        if: ${{ steps.release.outputs.release_created }}
        run: |
          echo "New release created: ${{ steps.release.outputs.tag_name }}"
          echo "Release notes: ${{ steps.release.outputs.release_notes }}"
          # Add your notification logic here (e.g., curl to Slack webhook)
