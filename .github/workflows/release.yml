name: Test and Release

# This workflow runs on every push to the main branch.
# It always runs tests. A release is only triggered if the commit message
# contains the string "[release]".
on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: '^1.23.0'

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          # Use a specific v2 version of golangci-lint
          version: v2.4.0
          # The action will automatically use .golangci.yml from the repository root
          working-directory: .

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: '^1.23.0' # The Go version to download (if necessary) and use.

      - name: Run tests
        run: make test

      - name: Run Release
        uses: googleapis/release-please-action@v4
        id: release # Assign an ID to access outputs
        with:
          release-type: go # Specify release type for Go projects
          # Removed: package-name: slog-kratos # This input is not valid for single-package repos
          # Optional: target-branch: main # If your main branch is not 'main'
          # Optional: changelog-path: CHANGELOG.md # If you want a specific changelog path
          # Optional: bump-minor-pre-major: true # If you want minor bumps before major version (e.g., 0.x.x -> 0.y.0)
          # Optional: command: release-pr # To only create release PRs, not direct releases
          # Optional: extra-files: | # If you have other files that need version bumping
          #   version.go
          #   config/version.json

      # Optional: If you want to do something after a release is created (e.g., notify Slack)
      - name: Notify on new release
        if: ${{ steps.release.outputs.release_created }}
        run: |
          echo "New release created: ${{ steps.release.outputs.tag_name }}"
          echo "Release notes: ${{ steps.release.outputs.release_notes }}"
          # Add your notification logic here (e.g., curl to Slack webhook)
